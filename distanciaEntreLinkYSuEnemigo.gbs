program{
    return(
        distanciaEntreLinkYSuEnemigo()
    )
}
 
function distanciaEntreLinkYSuEnemigo(){
    /*
    Proposito: Describir la distancia entre link y su enemigo.
    Precondicion: Debe existir un enemigo en una direccion desde la celda actual y 
    no debe haber ningun obstaculo entre ellos (Link y su Enemigo).
    Tipo: Numero
    Observaciones: Se realiza un recorrido en las 4 direcciones para asi poder determinar 
    en que direccion se encuentra el enemigo y asi poder determinar su distancia desde donde 
    se encuentra ubicado Link
    */
    distanciaAEnemigo:= 0
    while (puedeMover( direcciónEnLaQueEstáElEnemigo() && not hayEnemigo() ) {
        Mover(direcciónEnLaQueEstáElEnemigo())
        distanciaAEnemigo:= distanciaAEnemigo + 1
    }
    return (distanciaAEnemigo)
} 

function direcciónEnLaQueEstáElEnemigo() {
    /*
    PROPOSITO: indica la dirección en la que está el enemigo de Link.
    PARAMETRO: ninguno
    PRECONDICIÓN: hay un único enemigo visible en alguna de las 4 direcciones y el cabezal está sobre Link.
    OBSERVACIONES: utiliza un recorrido de búsqueda sobre direcciones.
    */
    direcciónABuscar:= minDir()
    while (not hayEnemigoEnlaVistaHacia_(direcciónABuscar)) {
        direcciónABuscar:= siguiente(direcciónABuscar)
    }
    return (direcciónABuscar)
}

function hayEnemigosEnLaVisionDeLinkHacia_(direccion){
    /*
    Proposito: indica si hay un enemigo en el campo de vision de 
    link, no debe haber ningun obstaculo al "direccion" para que
    pueda verlo.
    Precondicion: el cabezal debe estar sobre link
    Parametros: direccion: Direccion
    Tipo: Booleano
    Observaciones: Los enemigos se representan con bolitas Rojas
    y los obstaculos con bolitas Azules
    */
    while(puedeMover(direccion)  && not hayObstaculo() && 
        not hayEnemigosDeLink()){
        Mover(direccion)
    }
    return(
        hayEnemigosDeLink()
    ) 
}

function hayObstaculo(){
    return (hayBolitas(Azul))
}

function hayEnemigosDeLink(){
    return (hayBolitas(Rojo))
}
